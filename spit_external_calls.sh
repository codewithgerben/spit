#!/bin/bash

# Usage: ./spit_external_calls.sh <path-to-java-project>

PROJECT_DIR=$1
REPORT="spit-external-calls-report.md"

if [ -z "$PROJECT_DIR" ]; then
  echo "Usage: $0 <path-to-java-project>"
  exit 1
fi

cd "$PROJECT_DIR" || { echo "Invalid project directory: $PROJECT_DIR"; exit 1; }

echo "# SPIT External API/Web Service Calls Report" > "$REPORT"
echo "Scanned Project: \`$PROJECT_DIR\`" >> "$REPORT"
echo "" >> "$REPORT"

# Search patterns that often indicate external HTTP calls
echo "## Detected External Calls via RestTemplate, WebClient, FeignClient, HttpURLConnection" >> "$REPORT"
echo "" >> "$REPORT"

# RestTemplate
grep -rn "RestTemplate" . --include="*.java" | grep -E "http[s]?://" | sed 's/^/- /' >> "$REPORT"

# WebClient
grep -rn "WebClient" . --include="*.java" | grep -E "http[s]?://" | sed 's/^/- /' >> "$REPORT"

# FeignClient
grep -rn "@FeignClient" . --include="*.java" | sed 's/^/- /' >> "$REPORT"

# HttpURLConnection
grep -rn "HttpURLConnection" . --include="*.java" | sed 's/^/- /' >> "$REPORT"

# OkHttpClient or other custom clients
grep -rn "new OkHttpClient" . --include="*.java" | sed 's/^/- /' >> "$REPORT"

# Generic URL openStream or URI calls
grep -rnE 'URL\("http|URI.create\("http' . --include="*.java" | sed 's/^/- /' >> "$REPORT"

echo "" >> "$REPORT"
echo "_Generated by SPIT External Call Scanner_" >> "$REPORT"
echo "External call report generated: $REPORT"
