#!/bin/bash

# Usage: ./spit_caching_usage.sh <path-to-java-project>

PROJECT_DIR=$1
REPORT="spit-caching-usage-report.md"

if [ -z "$PROJECT_DIR" ]; then
  echo "Usage: $0 <path-to-java-project>"
  exit 1
fi

cd "$PROJECT_DIR" || { echo "Invalid project directory: $PROJECT_DIR"; exit 1; }

echo "# SPIT Caching Usage Report" > "$REPORT"
echo "Scanned Project: \`$PROJECT_DIR\`" >> "$REPORT"
echo "" >> "$REPORT"

echo "## Detected Cache Annotations" >> "$REPORT"
echo "" >> "$REPORT"
grep -rn "@Cacheable" . --include="*.java" | sed 's/^/- /' >> "$REPORT"
grep -rn "@CachePut" . --include="*.java" | sed 's/^/- /' >> "$REPORT"
grep -rn "@CacheEvict" . --include="*.java" | sed 's/^/- /' >> "$REPORT"
echo "" >> "$REPORT"

echo "## Detected Cache Manager Usage" >> "$REPORT"
echo "" >> "$REPORT"
grep -rn "CacheManager" . --include="*.java" | sed 's/^/- /' >> "$REPORT"
grep -rnE "CaffeineCache|RedisCacheManager|EhCacheCacheManager|ConcurrentMapCache" . --include="*.java" | sed 's/^/- /' >> "$REPORT"
echo "" >> "$REPORT"

echo "## Cache Configuration (application.yml / properties)" >> "$REPORT"
echo "" >> "$REPORT"

# Look for caching-related config keys in YAML and properties
find . -type f \( -name "application.yml" -o -name "application.properties" \) | while read cfg; do
  echo "### File: $cfg" >> "$REPORT"
  grep -Ei "cache|ttl|expire|time-to-live" "$cfg" | sed 's/^/- /' >> "$REPORT"
  echo "" >> "$REPORT"
done

echo "## Possible Issues or Missing TTLs" >> "$REPORT"
echo "" >> "$REPORT"
MISSING_TTL=$(find . -type f \( -name "application.yml" -o -name "application.properties" \) -exec grep -Li "ttl\|expire\|time-to-live" {} \;)
if [ -n "$MISSING_TTL" ]; then
  echo "The following config files do not mention TTL or expiration settings:" >> "$REPORT"
  echo "$MISSING_TTL" | sed 's/^/- /' >> "$REPORT"
else
  echo "- All config files appear to include TTL/expiration settings." >> "$REPORT"
fi

echo "" >> "$REPORT"
echo "_Generated by SPIT Caching Usage Detector_" >> "$REPORT"
echo "Caching report written to: $REPORT"
